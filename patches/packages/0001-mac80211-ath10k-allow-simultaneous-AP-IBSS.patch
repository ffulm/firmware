From 9228419e84a3e194ae8c30d1a189a998c3395c8f Mon Sep 17 00:00:00 2001
From: Matthias Schiffer <mschiffer@universe-factory.net>
Date: Wed, 20 May 2015 23:10:36 +0200
Subject: [PATCH 1/2] mac80211: ath10k: allow simultaneous AP+IBSS

---
 .../mac80211/patches/950-ath10k_AP_IBSS.patch      | 32 ++++++++++++++++++++++
 1 file changed, 32 insertions(+)
 create mode 100644 package/kernel/mac80211/patches/950-ath10k_AP_IBSS.patch

diff --git a/package/kernel/mac80211/patches/950-ath10k_AP_IBSS.patch b/package/kernel/mac80211/patches/950-ath10k_AP_IBSS.patch
new file mode 100644
index 0000000..33b3110
--- /dev/null
+++ b/package/kernel/mac80211/patches/950-ath10k_AP_IBSS.patch
@@ -0,0 +1,32 @@
+--- a/drivers/net/wireless/ath/ath10k/mac.c
++++ b/drivers/net/wireless/ath/ath10k/mac.c
+@@ -5264,6 +5264,10 @@ static const struct ieee80211_iface_limi
+ 	.max	= 7,
+ 	.types	= BIT(NL80211_IFTYPE_AP)
+ 	},
++	{
++	.max    = 1,
++	.types  = BIT(NL80211_IFTYPE_ADHOC)
++	},
+ };
+ 
+ static const struct ieee80211_iface_limit ath10k_10x_if_limits[] = {
+@@ -5271,6 +5275,10 @@ static const struct ieee80211_iface_limi
+ 	.max	= 8,
+ 	.types	= BIT(NL80211_IFTYPE_AP)
+ 	},
++	{
++	.max    = 1,
++	.types  = BIT(NL80211_IFTYPE_ADHOC)
++	},
+ };
+ 
+ static const struct ieee80211_iface_combination ath10k_if_comb[] = {
+@@ -5575,6 +5583,7 @@ int ath10k_mac_register(struct ath10k *a
+ 		ar->hw->wiphy->iface_combinations = ath10k_10x_if_comb;
+ 		ar->hw->wiphy->n_iface_combinations =
+ 			ARRAY_SIZE(ath10k_10x_if_comb);
++		ar->hw->wiphy->interface_modes |= BIT(NL80211_IFTYPE_ADHOC);
+ 		break;
+ 	case ATH10K_FW_WMI_OP_VERSION_UNSET:
+ 	case ATH10K_FW_WMI_OP_VERSION_MAX:
-- 
2.1.4

